{
  "_args": [
    [
      {
        "raw": "password-sheriff@^1.1.0",
        "scope": null,
        "escapedName": "password-sheriff",
        "name": "password-sheriff",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/owner/wdi/wingIt/node_modules/auth0-lock"
    ]
  ],
  "_from": "password-sheriff@>=1.1.0 <2.0.0",
  "_id": "password-sheriff@1.1.0",
  "_inCache": true,
  "_location": "/password-sheriff",
  "_nodeVersion": "4.3.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/password-sheriff-1.1.0.tgz_1487885755411_0.5448523855302483"
  },
  "_npmUser": {
    "name": "hzalaz",
    "email": "hernan@auth0.com"
  },
  "_npmVersion": "2.15.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "password-sheriff@^1.1.0",
    "scope": null,
    "escapedName": "password-sheriff",
    "name": "password-sheriff",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/auth0-lock"
  ],
  "_resolved": "https://registry.npmjs.org/password-sheriff/-/password-sheriff-1.1.0.tgz",
  "_shasum": "fdb3c3d845a0a3c92de422b2ad9346ce08a71413",
  "_shrinkwrap": null,
  "_spec": "password-sheriff@^1.1.0",
  "_where": "/Users/owner/wdi/wingIt/node_modules/auth0-lock",
  "dependencies": {},
  "description": "Password policy checker/enforcer.",
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.19.0"
  },
  "directories": {},
  "dist": {
    "shasum": "fdb3c3d845a0a3c92de422b2ad9346ce08a71413",
    "tarball": "https://registry.npmjs.org/password-sheriff/-/password-sheriff-1.1.0.tgz"
  },
  "gitHead": "4a17c9cba614ed8b75affc7c53ff0d4ba31a5b30",
  "main": "index.js",
  "maintainers": [
    {
      "name": "auth0",
      "email": "support@auth0.com"
    },
    {
      "name": "hzalaz",
      "email": "hernan@auth0.com"
    },
    {
      "name": "pose",
      "email": "albertopose@gmail.com"
    },
    {
      "name": "rolodato",
      "email": "rolodato@rolodato.com"
    }
  ],
  "name": "password-sheriff",
  "optionalDependencies": {},
  "readme": "# Password Sheriff\n\nNode.js (and browserify supported) library to enforce password policies.\n\n## Install\n\n```sh\nnpm install password-sheriff\n```\n\n## Usage\n\n```js\nvar PasswordPolicy = require('password-sheriff').PasswordPolicy;\n\n// Create a length password policy\nvar lengthPolicy = new PasswordPolicy({length: {minLength: 6}});\n\n// will throw as the password does not meet criteria\nlengthPolicy.assert('hello');\n\n// returns false if password does not meet rules\nassert.equal(false, lengthPolicy.check('hello'));\n\n// explains the policy\nvar explained = lengthPolicy.explain();\n\nassert.equal(1, explained.length);\n\n// easier i18n\nassert.equal('lengthAtLeast', explained[0].code);\nassert.equal('At least 6 characters in length',\n             format(explained[0].message, explained[0].format));\n```\n\n### API\n\n#### Password Rules\n\nPassword Rules are objects that implement the following methods:\n\n * `rule.validate(options)`: method called after the rule was created in order to validate `options` arguments.\n * `rule.assert(options, password)`: returns true if `password` is valid.\n * `rule.explain(options)`: returns an object with `code`, `message` and `format` attributes:\n   * `code`: Identifier of the rule. This attribute is meant to aid i18n.\n   * `message`: Description of the rule that must be formatted using `util.format`.\n   * `format`: Array of `string` or `Number` that will be used for the replacements required in `message`.\n * `rule.missing(options, password)`: returns an object similar to `rule.explain` plus an additional field `verified` that informs whether the password meets the rule.\n\n\nExample of `rule.explain` method:\n\n```js\nFooRule.prototype.explain = function (options) {\n  return {\n    // identifier rule (to make i18n easier)\n    code: 'foo',\n    message: 'Foo should be present at least %d times.',\n    format: [options.count]\n  };\n};\n```\n\nWhen explained:\n\n```js\nvar explained = fooRule.explain({count: 5});\n\n// \"Foo should be present at least 5 times\"\nutil.format(explained.message, explained.format[0]);\n```\n\nSee the [custom-rule example](examples/custom-rule.js) section for more information.\n\n#### Built-in Password Rules\n\nPassword Sheriff includes some default rules:\n\n  * `length`: The minimum amount of characters a password must have.\n  ```js\n  var lengthPolicy = new PasswordPolicy({length: {minLength: 3}});\n  ```\n\n  * `contains`:  Password should contain all of the charsets specified. There are 4 predefined charsets: `upperCase`, `lowerCase`, `numbers` and `specialCharacters` (`specialCharacters`are the ones defined in OWASP Password Policy recommendation document).\n  ```js\n  var charsets = require('password-sheriff').charsets;\n\n  var containsPolicy = new PasswordPolicy({contains: {\n    expressions: [charsets.upperCase, charsets.numbers]\n  }});\n  ```\n\n  * `containsAtLeast`: Passwords should contain at least `atLeast` of a total of `expressions.length` groups.\n  ```js\n  var charsets = require('password-sheriff').charsets;\n\n  var containsAtLeastPolicy = new PasswordPolicy({\n    containsAtLeast: {\n      atLeast: 2,\n      expressions: [ charsets.lowerCase, charsets.upperCase, charsets.numbers ]\n    }\n  });\n  ```\n\n  * `identicalChars`: Passwords should not contain any character repeated continuously `max + 1` times.\n  ```js\n  var identitcalCharsPolicy = new PasswordPolicy({\n    identicalChars: {\n      max: 3\n    }\n  });\n  ```\n\nSee the [default-rules example](examples/default-rules.js) section for more information.\n\n## Issue Reporting\n\nIf you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.\n\n## Author\n\n[Auth0](auth0.com)\n\n## License\n\nThis project is licensed under the MIT license. See the [LICENSE](LICENSE) file for more info.\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha --recursive"
  },
  "version": "1.1.0"
}
